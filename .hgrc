[ui]
username = Woojong Koh <wjngkoh@gmail.com>
commitsubrepos = False
# Use `merge = internal:merge` if you prefer markers. Tip: If anything goes
# wrong while merging, type `:cq` to exit Vim with an error. Then, hg ignores
# the changes and doesn't resolve the conflict prematurely.
merge = vimdiff

[pager]
pager = less -FRX

[merge-tools]
vimdiff.executable = vimdiff
vimdiff.args = -f -d $output -M $local $base $other -c "wincmd J" -c "set modifiable" -c "set write"
vimdiff.premerge = keep

[extdiff]
# Add a command called vimdiff that runs vimdiff with DirDiff plugin.
cmd.vimdiff = vim
opts.vimdiff = -f '+next' '+execute "DirDiff" fnameescape(argv(0)) fnameescape(argv(1))'

[subrepos]
allowed = True
git:allowed = True

[extensions]
color =
hgext.convert =
hgext.extdiff =
hgext.fetch =
hgext.graphlog =
progress =
purge =
rebase =
shelve =

# Google-specific configurations. See
# https://g3doc.corp.google.com/devtools/piper/g3doc/fig/user/customization.md?cl=head.
[color]
desc.here = red bold
changeset.remaining = bold black

[experimental]
graphshorten = True

[google_hgext]
pickcheckout.enable_curses_ui = true

[templatealias]
google_compact_desc_text = '{if(outsidenarrow,"", desc|firstline)}'

[alias]
# Prints the files in this revision that differ from the previous, as relative
# to the cwd. See go/pappysfigconfig.
whatsout = status --color=always --rev .^ -man

# See go/pappysfigconfig.
watch = !HGPLAINEXCEPT=alias,color,revsetalias,templatealias,i18n,graph watch -t -n 1 --color "echo $'\n\e[4mUncommitted Changes\e[0m' && hg st --color=always $(hg root) && echo $'\n\e[4mChanged in this CL\e[0m' && hg whatsout $(hg root) && echo && hg xl --color=always --config=extensions.blackbox=!"

evolve_all = !$HG evolve --all --any && $HG upload_exported
revert_all = revert --all

print_msg = parent --template '{desc}'
edit_msg = !$HG buildify; $HG commit --amend && $HG push -r .; $HG upload_exported

# Usage:
#   $ ./trajectory_refiner_main.sh train_eval_borg --remove --variant=cl`hg print_cl`
print_cl = !$HG push -r . --quiet && $HG exportedcl .
print_rev = log --template '{node}\n'

# Buildify BUILD files with changes occurring in this commit
# NOTE(wjkoh): Use hg fix instead?
buildify = !$HG whatsout | grep BUILD$ | xargs buildifier

# Note that you must add `-r .` if you want to push the current branch as well.
# See alias `mc` for example.
upload_exported = push -r "exportedchange() - obsolete() - troubled()"

# feed revision numbers through stdin.
# for example, hg print_rev -r xx -r yy -r aa::dd | hg rev_do 'echo cl/`hg print_cl`'
# use single quotes if you use backtick inline execution. always dry run to see
# the inline exectuion works as intended.
rev_do = !xargs -I % sh -c '$HG up -r % --quiet && $HG parent --template "Processing... \"{desc}\"\n"; $@'
lintdot = lint -r .

mamend = !$HG amend; $HG upload_exported; $HG fixdot --no-amend; $HG lintdot
mcommit = !$HG commit "$@" && $HG push -r .; $HG upload_exported; $HG fixdot --no-amend; $HG lintdot
mrebase = !$HG rebase "$@"; $HG upload_exported
msync = !$HG buildify; $HG sync; $HG upload_exported

[nointerrupt]
# Stops the "don't interrupt Mercurial" message when Ctrl-C'ing the "watch"
# command.
attend-watch=False

%include .hgrc_mac
